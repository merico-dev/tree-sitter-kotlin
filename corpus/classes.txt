==================
Classes
==================

class Empty
class Empty2 {}

---

(source_file
	(class_declaration
	    identifier: (type_identifier))
	(class_declaration
	    identifier: (type_identifier)
	    class_body: (class_body)))
 
==================
Class with methods
==================

class HelloWorld {
	fun a() {}

	fun b() {}
}

---

(source_file
	(class_declaration identifier: (type_identifier)
		class_body: (class_body
			(function_declaration identifier: (simple_identifier) function_body: (function_body))
			(function_declaration identifier: (simple_identifier) function_body: (function_body)))))

==================
Generic class
==================

class Container<T> {}

---

(source_file
	(class_declaration identifier: (type_identifier)
		(type_parameters (type_parameter (type_identifier)))
		class_body: (class_body)))

==================
Class with methods and expressions
==================

class Strings {
	fun aString() = "Hello World!"

	fun anotherString() = "Hello" + " " + "World"
}

---

(source_file
	(class_declaration identifier: (type_identifier)
		class_body: (class_body
                        (function_declaration identifier: (simple_identifier)
                            function_body: (function_body
                                expression: (line_string_literal)))
                        (function_declaration identifier: (simple_identifier)
                            function_body: (function_body
                                expression: (additive_expression
                                    left: (additive_expression
                                        left: (line_string_literal)
                                        right: (line_string_literal))
                                    right: (line_string_literal)))))))

==================
Class with modifiers
==================

internal open class Test {
	private abstract inline fun test()
}

---

(source_file
	(class_declaration
		(modifiers (visibility_modifier) (inheritance_modifier))
		identifier: (type_identifier)
        class_body: (class_body
                (function_declaration
                    (modifiers (visibility_modifier) (inheritance_modifier) (function_modifier))
                    identifier: (simple_identifier)))))

==================
Objects
==================

object Singleton {
	fun test()
}

---

(source_file
	(object_declaration (type_identifier)
		(class_body
			(function_declaration (simple_identifier)))))

==================
Primary constructors
==================

data class Vector2D(
	val x: Int,
	val y: Int
)

---

(source_file
	(class_declaration
		(modifiers (class_modifier))
		identifier: (type_identifier)
		(primary_constructor
			(class_parameter
				(simple_identifier)
				(user_type identifier: (type_identifier)))
			(class_parameter
				(simple_identifier)
				(user_type identifier: (type_identifier))))))

==================
Inheritance
==================

class A : B() {}

class C(param: Int) : D(param)

class D : SomeInterface

---

(source_file
	(class_declaration
		identifier: (type_identifier)
		delegation_specifiers: (delegation_specifier constructor_invocation: (constructor_invocation (user_type identifier: (type_identifier))
			(value_arguments)))
		class_body: (class_body))
	(class_declaration
		identifier: (type_identifier)
		(primary_constructor
			(class_parameter
				(simple_identifier)
				(user_type identifier: (type_identifier))))
		delegation_specifiers: (delegation_specifier constructor_invocation: (constructor_invocation (user_type identifier: (type_identifier))
			(value_arguments (value_argument expression: (simple_identifier))))))
	(class_declaration
		identifier: (type_identifier)
		delegation_specifiers: (delegation_specifier user_type: (user_type identifier: (type_identifier)))))

==================
Properties
==================

class Something {
	val x: Int = 4
	var y: Int?
	val z: Int get() = x
}

---

(source_file
	(class_declaration
		identifier: (type_identifier)
        class_body: (class_body
                (property_declaration variable_declaration: (variable_declaration
                                                identifier: (simple_identifier)
                                                (user_type identifier: (type_identifier)))
                    (integer_literal))
                (property_declaration
                    variable_declaration: (variable_declaration
                                identifier: (simple_identifier)
                                (nullable_type type: (user_type identifier: (type_identifier)))))
                (property_declaration
                    variable_declaration: (variable_declaration
                                identifier: (simple_identifier)
                                (user_type identifier: (type_identifier)))
                            (getter (function_body expression: (simple_identifier)))))))

==================
Constructor delegation calls
==================

class Test(x: Int, y: Int) {
	constructor() : this(0, 0)
}

---

(source_file
	(class_declaration
		identifier: (type_identifier)
		(primary_constructor
			(class_parameter
				(simple_identifier)
				(user_type identifier: (type_identifier)))
			(class_parameter
				(simple_identifier)
				(user_type identifier: (type_identifier))))
		class_body: (class_body
                        (secondary_constructor
                            (constructor_delegation_call
                                (value_arguments
                                    (value_argument expression: (integer_literal))
                                    (value_argument expression: (integer_literal))))))))

==================
Enum classes
==================

enum class Suit {
	DIAMONDS, CLOVERS, HEARTS, SPADES
}

enum class Color(val rgb: Int) {
	RED(0xFF0000),
	GREEN(0x00FF00),
	BLUE(0x0000FF);

	override fun toString() = rgb.toString(16)
}

---

(source_file
	(class_declaration
		identifier: (type_identifier)
		enum_class_body: (enum_class_body
			(enum_entry
				(simple_identifier))
			(enum_entry
				(simple_identifier))
			(enum_entry
				(simple_identifier))
			(enum_entry
				(simple_identifier))))
	(class_declaration
		identifier: (type_identifier)
		(primary_constructor
			(class_parameter
				(simple_identifier)
				(user_type identifier: (type_identifier))))
		enum_class_body: (enum_class_body
			(enum_entry
				(simple_identifier)
				(value_arguments
					(value_argument expression: (hex_literal))))
			(enum_entry
				(simple_identifier)
				(value_arguments
					(value_argument expression: (hex_literal))))
			(enum_entry
				(simple_identifier)
				(value_arguments
					(value_argument expression: (hex_literal))))
			(function_declaration
				(modifiers (member_modifier))
				identifier: (simple_identifier)
				function_body: (function_body
					expression: (call_expression
						(navigation_expression
							expression: (simple_identifier)
							navigation_suffix: (navigation_suffix
								    identifier: (simple_identifier)))
						(call_suffix
							value_arguments: (value_arguments
								(value_argument expression: (integer_literal))))))))))
